#!/usr/bin/make
# @configure_input@

toolsdir = @PWD@/tools

WGET = @WGET@

# Festival:
# =========
# -- Download parameters--
Festival_File = festival-2.4-release.tar.gz
Festival_MD5 = 49707d2f6744d5a67f81a96c36f7cb59
Festival_URL = http://festvox.org/packed/festival/2.4/festival-2.4-release.tar.gz

# Speech tools:
# =========
# -- Download parameters--
SpeechTools_File = speech_tools-2.4-release.tar.gz
SpeechTools_MD5 = 3d60e563135363eb2548d947f7ef4e14
SpeechTools_URL = http://festvox.org/packed/festival/2.4/speech_tools-2.4-release.tar.gz

# SPTK:
# =========
# -- Download parameters--
SPTK_File = SPTK-3.10.tar.gz
SPTK_MD5 = 96f879c97340f5d85f33b32a47d16e1b
SPTK_URL = http://sourceforge.net/projects/sp-tk/files/SPTK/SPTK-3.10/SPTK-3.10.tar.gz/download

# hts_engine:
# =========
# -- Download parameters--
htsengine_File = hts_engine_API-1.10.tar.gz
htsengine_MD5 = 5626d1e2522659e93fb295f0b42339f5
htsengine_URL = http://sourceforge.net/projects/hts-engine/files/hts_engine%20API/hts_engine_API-1.10/hts_engine_API-1.10.tar.gz/download

# HTS:
# =========
# -- Download parameters--
HTS_File = HTS-2.3_for_HTK-3.4.1.tar.bz2
HTS_MD5 = cb8e68a2ea2320b0e8fb519f86fa429d
HTS_URL = http://hts.sp.nitech.ac.jp/archives/2.3/HTS-2.3_for_HTK-3.4.1.tar.bz2

# HTK:
# =========
# -- Download parameters--
HTK_File = HTK-3.4.1.tar.gz
HTK_MD5 = b3fc12006b0af12f59cd573c07aa4c1d
HTK_URL = http://htk.eng.cam.ac.uk/ftp/software/HTK-3.4.1.tar.gz
HTK_USER = @htk_user@
HTK_PASSWORD = @htk_password@

# HDecode:
# =========
# -- Download parameters--
HDecode_File = HDecode-3.4.1.tar.gz
HDecode_MD5 = 4e332a7fea6db58751cec878b80c3575
HDecode_URL = http://htk.eng.cam.ac.uk/ftp/software/hdecode/HDecode-3.4.1.tar.gz
HDecode_USER = @htk_user@
HDecode_PASSWORD = @htk_password@


ALLDOWNLOADS = Festival SpeechTools SPTK htsengine HTS HTK HDecode
ALLCONFIGURES = Festival SpeechTools SPTK htsengine HTS
download_all = $(addprefix download_,$(ALLDOWNLOADS)) 
configure_all = $(addprefix configure_,$(ALLCONFIGURES)) 

.PHONY: all $(download_all) $(configure_all)
all: $(download_all) $(configure_all)

# This target will check if the downloads are correct. If they are not
# it will download them again, using a password if needed.
$(download_all):
	echo "$($(subst download_,,$@)_MD5)  $($(subst download_,,$@)_File)" | md5sum -c --status && echo "$(subst download_,,$@) already downloaded" || \
	( rm -f $($(subst download_,,$@)_File) && \
	$(WGET) --http-user=$($(subst download_,,$@)_USER) --http-password=$($(subst download_,,$@)_PASSWORD) --output-document=$($(subst download_,,$@)_File) $($(subst download_,,$@)_URL) )

# SpeechTools and Festival have strange building systems and relative directories, 
# so I just follow the default behaviour.
# FIXME: Add test for alsa and ncurses to configure.ac from speech_tools/configure.ac
configure_SpeechTools: download_SpeechTools
	if [ ! -f $(toolsdir)/speech_tools/bin/ch_wave ]; then \
		rm -rf $(toolsdir)/speech_tools && \
		mkdir $(toolsdir)/speech_tools && \
		tar xzf $(SpeechTools_File) -C $(toolsdir)/speech_tools --strip-components 1 && \
		cd $(toolsdir)/speech_tools && \
		./configure && \
		make && \
		make install; \
	fi

configure_Festival: download_Festival configure_SpeechTools
	if [ ! -f $(toolsdir)/festival/bin/festival ]; then \
		rm -rf $(toolsdir)/festival && \
		mkdir $(toolsdir)/festival && \
		tar xzf $(Festival_File) -C $(toolsdir)/festival --strip-components 1 && \
		cd $(toolsdir)/"festival" && \
		./configure && \
		make && \
		make install; \
	fi

configure_SPTK: download_SPTK
	if [ ! -f $(toolsdir)/bin/x2x ]; then \
		rm -rf "SPTK" && mkdir "SPTK" && \
		tar xzf $(SPTK_File) -C SPTK --strip-components 1 && \
		cd "SPTK" && \
		./configure --prefix=$(toolsdir) && \
		make && \
		make install; \
	fi

configure_htsengine: download_htsengine
	if [ ! -f $(toolsdir)/bin/hts_engine ]; then \
		rm -rf "hts_engine_API" && mkdir "hts_engine_API" && \
		tar xzf $(htsengine_File) -C "hts_engine_API" --strip-components 1 && \
		cd "hts_engine_API" && \
		./configure --prefix=$(toolsdir) && \
		make && \
		make install; \
	fi

# I am removing the need for ActiveTcl by installing tcl-snack and libx11-dev
# FIXME: Proper tests are required in configure.ac. Are these packages still needed?
configure_HTS: download_HTS download_HDecode download_HTS
	if [ ! -f $(toolsdir)/bin/HHEd ]; then \
		rm -rf hts htspatch && \
		tar xzf $(HTK_File) && \
		tar xzf $(HDecode_File) && \
		rm -rf hts && \
		mv htk hts && \
		mkdir -p htspatch && \
		cp $(HTS_File) htspatch && \
		cd htspatch && \
		tar xjf $(HTS_File) && \
		mv HTS-2.3_for_HTK-3.4.1.patch ../hts && \
		cd ../hts && \
		patch -p1 -d . < HTS-2.3_for_HTK-3.4.1.patch && \
		./configure --enable-hdecode CFLAGS="-fopenmp" --prefix=$(toolsdir) && \
		make all && \
		make install; \
	fi

